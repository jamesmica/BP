#
# ga_auth()
# Set up GA property ID
property_id <- "417806289"
# Test API is working
basic <- ga_data(
property_id,
metrics = c("activeUsers", "newUsers","sessions", "screenPageViews"),
date_range = c("2023-01-01", "2023-12-28")
)
# Test API is working
basic <- ga_data(
property_id,
metrics = c("fullPageUrl"),
dimensions = c("screenPageViews"),
date_range = c("2023-01-01", "2023-12-28")
)
# Test API is working
basic <- ga_data(
property_id,
metrics = c("screenPageViews"),
dimensions = c("fullPageUrl"),
date_range = c("2023-01-01", "2023-12-28")
)
View(basic)
View(basic)
basic <- basic %>%
filter(grepl("pageid",fullPageUrl,ignore.case = TRUE))
basic$fullPageUrl<-as.numeric(gsub("\\D", "", basic$fullPageUrl))
basic2 <- basic %>%
sort(decreasing = TRUE)
basic2 <- basic %>%
order(decreasing = TRUE)
basic <- basic[order(basic$screenPageViews,decreasing=TRUE),]
BDD <- readxl::read_excel("BDD.xlsx")
BDD<-merge(x = BDD,y=basic,by.x=BDD$`N°`,by.y=basic$fullPageUrl)
BDD<-merge(x = BDD,y=basic,by.x=`N°`,by.y=fullPageUrl)
BDD<-merge(x = BDD,y=basic,by.x="N°",by.y=fullPageUrl)
BDD<-merge(x = BDD,y=basic,by.x="N°",by.y="fullPageUrl")
runApp('app2.R')
themes <- readxl::read_excel("thematiques.xlsx")
dep <- readxl::read_excel("dep.xlsx")
dep <- readxl::read_excel("département.xlsx")
names(dep$CODE)<-dep$NOM
BDD$`@GRAPH` <- gsub(x = BDD$`@GRAPH`,pattern = "C:\\NOT\\","")
BDD$`@GRAPH` <- gsub(x = BDD$`@GRAPH`,pattern = "C:*\\NOT*\\","")
BDD$`@GRAPH` <- gsub(x = BDD$`@GRAPH`,pattern = "C:'\\'NOT*'\\',"")
themes <- readxl::read_excel("thematiques.xlsx")
BDD$`@GRAPH` <- gsub(x = BDD$`@GRAPH`,pattern = "C:'\\'NOT*'\\'","")
BDD$`@GRAPH` <- gsub(x = BDD$`@GRAPH`,pattern = "C:\\\\NOT*\\\\","")
runApp('app2.R')
themes <- readxl::read_excel("thematiques.xlsx")
THEMAS<-unique(levels(as.factor(themes$THEMA)))
runApp('app2.R')
runApp('app2.R')
body<-dashboardBody(tags$head(HTML("
<meta name='description' content='Plateforme de visualisation de données en Open Data pour les collectivités territoriales et les entreprises. INSEE, CAF, DataCaf, Pôle Emploi...'>
<meta name='keywords' content='HTML, CSS, JAVASCRIPT, INSEE, CAF, Pole Emploi, Open Data'>
<meta name='author' content='Ithea Conseil'>
<meta name='viewport' content='width=device-width, initial-scale=1.0'>"),
includeCSS("www/styles.css"),
tags$script(src = "custom.js"),
HTML("<!-- Google tag (gtag.js) -->
<script async src='https://www.googletagmanager.com/gtag/js?id=G-1ZBDNSFN2J'></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'G-1ZBDNSFN2J');
</script>"
),
# tags$script(HTML(js)),
tags$link(rel = "icon", sizes = "16x16", href = "favicon1.ico")),
# shinybusy::add_busy_gif(
#   src = "GIF_ithea_color.gif",height = "40px",width = "40px",
#   position="full-page",
#   margins = c(64,12),timeout = 400
# )
tabItems(
tabItem(
tabName = "accueil",
tags$div(id="accueil_wrapper",
tags$div(class="green_div",
tags$div(id="accueil_text",
h2("BIBLIOTHÈQUE DE BONNES PRATIQUES"),
h3("La première banque d’initiatives innovantes portées par les collectivités de France et à l’étranger"),
h3("+ de 1000 Bonnes Pratiques"),tags$div(id="collectivite?",
selectizeInput(inputId="avec_collectivite",label = "",choices=NULL),
tags$a(tags$div(id="sans_collectivite","Continuer sans collectivité 〉"),onclick="openTab('decouvrir')",href="#"))),
tags$div(id="accueil_img",
tags$img(src="accueil.jpg")
)
)
)
),
tabItem(
tabName = "thematiques",
tags$div(id="thematiques_wrapper",class="flex-column",
h2(class="titreBP","BIBLIOTHÈQUE DE BONNES PRATIQUES"),
tags$div(class="green_div_column",
h3("Thématiques"),
tags$div(class="themes",
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="dem.png",height="80%",alt="Démographie_logo"),"Démographie",onclick="openTab('dem1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="pet.png",height="80%",alt="petite_enfance_logo"),"Petite enfance",onclick="openTab('pet1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="enf.png",height="80%",alt="enfance_jeunesse_logo"),"Enfance jeunesse",onclick="openTab('enf1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="fam.png",height="80%",alt="familles_logo"),"Familles",onclick="openTab('fam1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="sen.png",height="80%",alt="séniors_logo"),"Séniors",onclick="openTab('sen1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="log.png",height="80%",alt="logement_logo"),"Logement-Immobilier",onclick="openTab('log1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="hab.png",height="80%",alt="habitat_logo"),"Habitat",onclick="openTab('hab1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="emp.png",height="80%",alt="emploi_logo"),"Emploi",onclick="openTab('emp1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="rev.png",height="80%",alt="revenus_précarité_logo"),"Revenus précarité",onclick="openTab('rev1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="ega.png",height="80%",alt="égalité_femmes_hommes_logo"),"Egalité femmes-hommes",onclick="openTab('ega1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="san.png",height="80%",alt="santé_handicap_logo"),"Santé",onclick="openTab('san1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="ent.png",height="80%",alt="entreprises_logo"),"Entreprises",onclick="openTab('ent1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="vie.png",height="80%",alt="vie_locale_logo"),"Vie locale",onclick="openTab('vie1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="tou.png",height="80%",alt="tourisme_logo"),"Tourisme",onclick="openTab('tou1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="env.png",height="80%",alt="environnement_logo"),"Environnement",onclick="openTab('env1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="fin.png",height="80%",alt="finances_locales_logo"),"Finances locales",onclick="openTab('fin1')",href="#")))
)
)
),
tabItem(
shinyWidgets::shinyWidgetsGallery()
tabName = "decouvrir",
shinyWidgets::shinyWidgetsGallery()
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
body<-dashboardBody(tags$head(HTML("
<meta name='description' content='Plateforme de visualisation de données en Open Data pour les collectivités territoriales et les entreprises. INSEE, CAF, DataCaf, Pôle Emploi...'>
<meta name='keywords' content='HTML, CSS, JAVASCRIPT, INSEE, CAF, Pole Emploi, Open Data'>
<meta name='author' content='Ithea Conseil'>
<meta name='viewport' content='width=device-width, initial-scale=1.0'>"),
includeCSS("www/styles.css"),
tags$script(src = "custom.js"),
HTML("<!-- Google tag (gtag.js) -->
<script async src='https://www.googletagmanager.com/gtag/js?id=G-1ZBDNSFN2J'></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'G-1ZBDNSFN2J');
</script>"
),
# tags$script(HTML(js)),
tags$link(rel = "icon", sizes = "16x16", href = "favicon1.ico")),
# shinybusy::add_busy_gif(
#   src = "GIF_ithea_color.gif",height = "40px",width = "40px",
#   position="full-page",
#   margins = c(64,12),timeout = 400
# )
tabItems(
tabItem(
tabName = "accueil",
tags$div(id="accueil_wrapper",
tags$div(class="green_div",
tags$div(id="accueil_text",
h2("BIBLIOTHÈQUE DE BONNES PRATIQUES"),
h3("La première banque d’initiatives innovantes portées par les collectivités de France et à l’étranger"),
h3("+ de 1000 Bonnes Pratiques"),tags$div(id="collectivite?",
selectizeInput(inputId="avec_collectivite",label = "",choices=NULL),
tags$a(tags$div(id="sans_collectivite","Continuer sans collectivité 〉"),onclick="openTab('decouvrir')",href="#"))),
tags$div(id="accueil_img",
tags$img(src="accueil.jpg")
)
)
)
),
tabItem(
tabName = "thematiques",
tags$div(id="thematiques_wrapper",class="flex-column",
h2(class="titreBP","BIBLIOTHÈQUE DE BONNES PRATIQUES"),
tags$div(class="green_div_column",
h3("Thématiques"),
tags$div(class="themes",
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="dem.png",height="80%",alt="Démographie_logo"),"Démographie",onclick="openTab('dem1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="pet.png",height="80%",alt="petite_enfance_logo"),"Petite enfance",onclick="openTab('pet1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="enf.png",height="80%",alt="enfance_jeunesse_logo"),"Enfance jeunesse",onclick="openTab('enf1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="fam.png",height="80%",alt="familles_logo"),"Familles",onclick="openTab('fam1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="sen.png",height="80%",alt="séniors_logo"),"Séniors",onclick="openTab('sen1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="log.png",height="80%",alt="logement_logo"),"Logement-Immobilier",onclick="openTab('log1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="hab.png",height="80%",alt="habitat_logo"),"Habitat",onclick="openTab('hab1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="emp.png",height="80%",alt="emploi_logo"),"Emploi",onclick="openTab('emp1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="rev.png",height="80%",alt="revenus_précarité_logo"),"Revenus précarité",onclick="openTab('rev1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="ega.png",height="80%",alt="égalité_femmes_hommes_logo"),"Egalité femmes-hommes",onclick="openTab('ega1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="san.png",height="80%",alt="santé_handicap_logo"),"Santé",onclick="openTab('san1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="ent.png",height="80%",alt="entreprises_logo"),"Entreprises",onclick="openTab('ent1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="vie.png",height="80%",alt="vie_locale_logo"),"Vie locale",onclick="openTab('vie1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="tou.png",height="80%",alt="tourisme_logo"),"Tourisme",onclick="openTab('tou1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="env.png",height="80%",alt="environnement_logo"),"Environnement",onclick="openTab('env1')",href="#")),
tags$div(class="ombre carre-thematique",tags$a(tags$img(src="fin.png",height="80%",alt="finances_locales_logo"),"Finances locales",onclick="openTab('fin1')",href="#")))
)
)
),
tabItem(
tabName = "decouvrir",
tags$div(id="decouvrir_wrapper",class="flex-column",
h2(class="titreBP","BIBLIOTHÈQUE DE BONNES PRATIQUES"),
tags$div(id="filtres",
shinyWidgets::pickerInput(inputId = "Thematiques",selected=NULL,multiple=TRUE,label=NULL,choices=list(names(c(THEMAS)) == themes$SOUSTHEMA
),width = "208px",options = list(
`actions-box` = TRUE,
`deselect-all-text` = "Tout déselectionner",
`select-all-text` = "Tout sélectionner",
`none-selected-text` = "Thématiques",liveSearch = TRUE
)),
shinyWidgets::pickerInput(inputId = "Habitants",multiple=TRUE,selected = NULL,label=NULL,
choices=c("Moins de 500 habitants","Entre 500 et 1 000 habitants","Entre 1 000 et 2 500 habitants","Entre 2 500 et 10 000 habitants","Entre 10 000 et 50 000 habitants","Entre 50 000 et 80 000 habitants","Entre 80 000 et 100 000 habitants","Plus de 100 000 habitants"),width = "320px",
options = list(
`actions-box` = TRUE,
`deselect-all-text` = "Tout déselectionner",
`select-all-text` = "Tout sélectionner",
`none-selected-text` = "Nombre d'habitants"
)),
shinyWidgets::pickerInput(inputId = "Pays",selected=NULL,label=NULL,choices=dep$CODE,width = "208px",options = list(placeholder="Département", liveSearch = TRUE))),
textInput(inputId = "Motscles",label=NULL,width = "208px", placeholder="Mots-clés")
),
tags$div(class="green_div_column",
tags$div(id="BP",uiOutput("BPs")))
) ,
tabItem(
tabName = "bp_show",
tags$div(id="bp_wrapper",class="flex-column",
h2(class="titreBP","BIBLIOTHÈQUE DE BONNES PRATIQUES"),
tags$div(class="green_div_column",uiOutput("BP_page"))
)
)
)
)
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
library(shiny); runApp('app2.R')
runApp('app2.R')
#
# ga_auth()
# Set up GA property ID
property_id <- "417806289"
# Test API is working
basic <- ga_data(
property_id,
metrics = c("screenPageViews"),
dimensions = c("fullPageUrl"),
date_range = c("2023-01-01", "2023-12-28")
)
basic <- basic %>%
filter(grepl("pageid",fullPageUrl,ignore.case = TRUE))
basic$fullPageUrl<-as.numeric(gsub("\\D", "", basic$fullPageUrl))
basic <- basic[order(basic$screenPageViews,decreasing=TRUE),]
options(shiny.maxRequestSize=30*1024^2)
BDD <- readxl::read_excel("BDD.xlsx")
BDD[is.na(BDD)] <- ""
BDD$THEMA<-paste0(BDD$THEMA1,BDD$THEMA2,BDD$THEMA3,BDD$THEMA4)
BDD<-merge(x = BDD,y=basic,by.x="N°",by.y="fullPageUrl",all.x = TRUE)
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
vector1<-c(input$TH1,input$TH2,input$TH3,input$TH4,input$TH5,input$TH6,input$TH7,input$TH8,
input$TH9,input$TH10,input$TH11,input$TH12,input$TH13,input$TH14,input$TH15)
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
index<-1:16
index<-as.data.frame(index)
index<-1:15
index<-as.data.frame(index)
index<-merge(index,vector1)
vector1<-as.integer(c(0,1))
vector1<-as.integer(c(0,1,0,0,0,0,0,0,0,0,0,0,0,0,0))
index<-1:15
index<-as.data.frame(index)
index<-merge(index,vector1)
index<-1:15
index<-as.data.frame(index)
index<-merge(index,vector1,all.x = TRUE)
index<-merge(index,vector1,all.x = TRUE,all = TRUE)
index<-1:15
index<-as.data.frame(index)
index<-merge(index,vector1,all.x = TRUE,all = TRUE)
index<-data.frame(index,vector1)
vector1<-as.integer(c(0,1,0,0,0,0,0,0,0,0,0,0,0,0,0))
index<-1:15
index<-as.data.frame(index)
index<-data.frame(index,vector1)
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
per <- readxl::read_excel("pertinence.xlsx")
names(per$INSEE)<-per$NOM_COUV
per <- readxl::read_excel("pertinence.xlsx")
names(per$INSEE)<-per$NOM2
runApp('app2.R')
per <- readxl::read_excel("pertinence.xlsx",col_types = c("text","text","text","text","text","text","text","text","text","text"))
names(per$INSEE)<-per$NOM2
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
shinyWidgets::shinyWidgetsGallery()
shinyWidgets::shinyWidgetsGallery()
library(shinyWidgets)
shinyWidgets::shinyWidgetsGallery()
library(shinyWidgets)
shinyWidgets::shinyWidgetsGallery()
library(shinyWidgets)
shinyWidgets::shinyWidgetsGallery()
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
library(shiny); runApp('app3.R')
# Get a list of all GA4 metrics
metrics_list = ga_meta(version = "data",propertyId = "417806289")
# Provide the service account email and private key
googleAnalyticsR::ga_auth(email = "james.michelot@ithea-conseil.fr",
json_file = "clientt.json")
# Get a list of all GA4 metrics
# metrics_list = ga_meta(version = "data",propertyId = "417806289")
#
# ga_auth()
# Set up GA property ID
property_id <- "417806289"
# Test API is working
basic <- ga_data(
property_id,
metrics = c("screenPageViews"),
dimensions = c("fullPageUrl"),
date_range = c("2023-01-01", "2023-12-28")
)
basic <- basic %>%
filter(grepl("pageid",fullPageUrl,ignore.case = TRUE))
basic$fullPageUrl<-as.numeric(gsub("\\D", "", basic$fullPageUrl))
basic <- basic[order(basic$screenPageViews,decreasing=TRUE),]
View(basic)
# Test API is working
basic <- ga_data(
property_id,
metrics = c("screenPageViews"),
dimensions = c("fullPageUrl"),
date_range = c("2023-01-01", "2023-12-28")
)
View(basic)
basic <- basic %>%
filter(grepl("pageid",fullPageUrl,ignore.case = TRUE)) %>%
filter(grepl("ithea",fullPageUrl,ignore.case = TRUE))
runApp('app3.R')
runApp('app3.R')
BDD <- readxl::read_excel("BDD_final.xlsx")
# Get a list of all GA4 metrics
# metrics_list = ga_meta(version = "data",propertyId = "417806289")
#
# ga_auth()
# Set up GA property ID
property_id <- "417806289"
# Test API is working
basic <- ga_data(
property_id,
metrics = c("screenPageViews"),
dimensions = c("fullPageUrl"),
date_range = c("2023-12-01", "2025-12-28")
)
basic <- basic %>%
filter(grepl("pageid",fullPageUrl,ignore.case = TRUE)) %>%
filter(grepl("ithea",fullPageUrl,ignore.case = TRUE))
basic$fullPageUrl<-as.numeric(gsub("\\D", "", basic$fullPageUrl))
basic <- basic[order(basic$screenPageViews,decreasing=TRUE),]
options(shiny.maxRequestSize=30*1024^2)
BDD <- readxl::read_excel("BDD_final.xlsx")
BDD$X<-as.character(BDD$X)
BDD$Y<-as.character(BDD$Y)
BDD$CODE_COMEPCI<-as.character(BDD$CODE_COMEPCI)
BDD$CODE_COM<-as.character(BDD$CODE_COM)
BDD[is.na(BDD)] <- ""
BDD$THEMA<-paste0(BDD$THEMA1,BDD$THEMA2,BDD$THEMA3,BDD$THEMA4)
BDD<-merge(x = BDD,y=basic,by.x="N°",by.y="fullPageUrl",all.x = TRUE)
BDD <- readxl::read_excel("BDD_final.xlsx")
BDD$X<-as.character(BDD$X)
BDD$Y<-as.character(BDD$Y)
BDD$CODE_COMEPCI<-as.character(BDD$CODE_COMEPCI)
BDD$CODE_COM<-as.character(BDD$CODE_COM)
BDD[is.na(BDD)] <- ""
BDD$THEMA<-paste0(BDD$THEMA1,BDD$THEMA2,BDD$THEMA3,BDD$THEMA4)
BDD<-merge(x = BDD,y=basic,by.x="N°",by.y="fullPageUrl",all.x = TRUE,all.y = FALSE)
BDD <- readxl::read_excel("BDD_final.xlsx")
BDD$X<-as.character(BDD$X)
BDD$Y<-as.character(BDD$Y)
BDD$CODE_COMEPCI<-as.character(BDD$CODE_COMEPCI)
BDD$CODE_COM<-as.character(BDD$CODE_COM)
BDD[is.na(BDD)] <- ""
BDD$THEMA<-paste0(BDD$THEMA1,BDD$THEMA2,BDD$THEMA3,BDD$THEMA4)
BDD<-merge(x = BDD,y=basic,by.x="N°",by.y="fullPageUrl")
BDD<-merge(x = BDD,y=basic,by.x="N°",by.y="fullPageUrl",all.x = TRUE)
BDD <- readxl::read_excel("BDD_final.xlsx")
BDD$X<-as.character(BDD$X)
BDD$Y<-as.character(BDD$Y)
BDD$CODE_COMEPCI<-as.character(BDD$CODE_COMEPCI)
BDD$CODE_COM<-as.character(BDD$CODE_COM)
BDD[is.na(BDD)] <- ""
BDD$THEMA<-paste0(BDD$THEMA1,BDD$THEMA2,BDD$THEMA3,BDD$THEMA4)
BD1<-merge(x = BDD,y=basic,by.x="N°",by.y="fullPageUrl",all.x = TRUE)
BD1<-merge(x = BDD,y=basic,by.x="N°",by.y="fullPageUrl",all = TRUE)
BD1<-merge(x = BDD,y=basic,by.x="N°",by.y="fullPageUrl",all.y = TRUE)
BD1<-merge(x = BDD,y=basic,by.x="N°",by.y="fullPageUrl",all.x = TRUE)
basic <- basic %>%
filter(grepl("pageid",fullPageUrl,ignore.case = TRUE)) %>%
filter(grepl("ithea",fullPageUrl,ignore.case = TRUE))
# Test API is working
basic <- ga_data(
property_id,
metrics = c("screenPageViews"),
dimensions = c("fullPageUrl"),
date_range = c("2023-12-01", "2025-12-28")
)
basic <- basic %>%
filter(grepl("pageid",fullPageUrl,ignore.case = TRUE)) %>%
filter(grepl("ithea",fullPageUrl,ignore.case = TRUE))
View(basic)
basic$fullPageUrl<-as.numeric(gsub("BP\\D", "", basic$fullPageUrl))
# Test API is working
basic <- ga_data(
property_id,
metrics = c("screenPageViews"),
dimensions = c("fullPageUrl"),
date_range = c("2023-12-01", "2025-12-28")
)
basic <- basic %>%
filter(grepl("pageid=BP",fullPageUrl,ignore.case = TRUE)) %>%
filter(grepl("ithea",fullPageUrl,ignore.case = TRUE))
basic$fullPageUrl<-as.numeric(gsub("\\D", "", basic$fullPageUrl))
View(basic)
basic <- basic[order(basic$screenPageViews,decreasing=TRUE),]
BDD <- readxl::read_excel("BDD_final.xlsx")
BDD$X<-as.character(BDD$X)
BDD$Y<-as.character(BDD$Y)
BDD$CODE_COMEPCI<-as.character(BDD$CODE_COMEPCI)
BDD$CODE_COM<-as.character(BDD$CODE_COM)
BDD[is.na(BDD)] <- ""
BDD$THEMA<-paste0(BDD$THEMA1,BDD$THEMA2,BDD$THEMA3,BDD$THEMA4)
BD1<-merge(x = BDD,y=basic,by.x="N°",by.y="fullPageUrl",all.x = TRUE)
runApp('app3.R')
runApp('app3.R')
runApp('app3.R')
runApp('app3.R')
runApp('app3.R')
runApp('app3.R')
runApp('app3.R')
library(shiny); runApp('app3.R')
runApp('app3.R')
runApp('app3.R')
library(shiny); runApp('app3 - Copie.R')
